@model LegislacionAPP.Models.ReporteCicloVM
@{
    ViewData["Title"] = "Informe de auditoría de cumplimiento";    
    int NivelFromPct(decimal pct)
    {
        if (pct >= 90) return 5;
        if (pct >= 80) return 4;
        if (pct >= 60) return 3;
        if (pct >= 40) return 2;
        if (pct > 0) return 1;
        return 0;
    }

    string NombreNivel(int n) => n switch
    {
        5 => "Optimizado",
        4 => "Gestionado cuantitativamente",
        3 => "Definido",
        2 => "Gestionado",
        1 => "Realizado",
        _ => "Incompleto"
    };
    string TextoPorNivel(int nivel)
    {
        switch (nivel)
        {
            case 1: // N1 — Inicial / Realizado
                return "El cumplimiento se realiza de forma principalmente reactiva y dependiente de personas. La documentación y la evidencia están dispersas. Se recomienda identificar y priorizar obligaciones legales, definir controles mínimos, registrar evidencias básicas y asignar responsables para cada requerimiento.";

            case 2: // N2 — Gestionado
                return "Existen procedimientos y registros básicos para atender los requerimientos de la legislación, aunque su aplicación es variable entre áreas. Se sugiere estandarizar formatos, establecer un calendario de revisiones, formalizar roles y asegurar la conservación uniforme de evidencias.";

            case 3: // N3 — Definido
                return "La organización cuenta con un marco interno documentado para cumplir la legislación, con procesos normalizados y comunicados. El siguiente paso es incorporar métricas de desempeño, auditorías internas periódicas, gestión sistemática de cambios normativos y programas de capacitación.";

            case 4: // N4 — Gestionado cuantitativamente
                return "El cumplimiento se controla mediante indicadores, umbrales y seguimiento continuo. Se recomienda fortalecer la trazabilidad de hallazgos, mejorar la oportunidad de las alertas, avanzar en automatización de controles y evaluar la efectividad de las acciones correctivas.";

            case 5: // N5 — Optimizado
                return "La mejora del cumplimiento es proactiva y basada en análisis de causas, lecciones aprendidas y comparación con mejores prácticas. Conviene sostener ciclos de innovación, anticipar cambios regulatorios, y consolidar mecanismos para incorporar mejoras de manera ágil y medible.";

            default:
                return "Revise los resultados y la evidencia para determinar el nivel de madurez y definir el plan de mejora correspondiente.";
        }
    }
    // Variables
    var fi = Model?.CicloAuditoria?.fecha_inicio;
    var fc = Model?.CicloAuditoria?.fecha_cierre;
    var empresa = Model?.Empresa?.nombre ?? "";
    var paisEmpresa = Model?.Empresa?.id_paisNavigation?.nombre ?? Model?.EmpresaPais ?? "";
    var representante = Model?.Empresa?.representante ?? "";
    var nif = Model?.Empresa?.nit ?? "";
    var tituloLey = Model?.Legislacion?.titulo ?? "";

    var auditor = ((Model?.Auditor?.nombre + " " + Model?.Auditor?.apellido)?.Trim()) ?? "";
    var paisAuditor = Model?.Auditor?.id_paisNavigation?.nombre ?? "";

    var pct = Model?.CicloAuditoria?.porcentaje_aprobado ?? 0m; // 0..100
    var lvl = NivelFromPct(pct);
    var nomNivel = NombreNivel(lvl);
}

<style>
    .report-wrap {
        max-width: 1000px;
        margin: 0 auto;
    }

    .justify {
        text-align: justify;
        text-justify: inter-word;
    }

    .pill {
        display: inline-block;
        padding: 4px 10px;
        border-radius: 9999px;
        font-weight: 600;
        font-size: .875rem;
        line-height: 1;
    }

    .pill-success {
        background: #28a745 !important;
        color: #fff !important;
    }

    .pill-warning {
        background: #ffc107 !important;
        color: #212529 !important;
    }

    .pill-danger {
        background: #dc3545 !important;
        color: #fff !important;
    }

    .pill-secondary {
        background: #6c757d !important;
        color: #fff !important;
    }

    .sem {
        width: 10px;
        height: 10px;
        border-radius: 50%;
        display: inline-block;
    }

    .sem-ok {
        background: #28a745 !important;
    }

    .sem-warn {
        background: #ffc107 !important;
    }

    .sem-bad {
        background: #dc3545 !important;
    }

    .sem-pend {
        background: #6c757d !important;
    }

    .evi-link {
        text-decoration: none;
        border-bottom: 1px dotted #6c757d;
    }

        .evi-link:hover {
            text-decoration: underline;
        }

    /* ===== Footer estilo certificado ===== */
    .report-footer {
        margin-top: 2rem;
        break-inside: avoid;
        page-break-inside: avoid;
    }

        .report-footer .signs {
            display: flex;
            gap: 3rem;
            align-items: flex-end;
            justify-content: space-between;
            break-inside: avoid;
            page-break-inside: avoid;
        }

        .report-footer .sign {
            flex: 1 1 45%;
            text-align: center;
            break-inside: avoid;
            page-break-inside: avoid;
        }

            .report-footer .sign .line {
                border-top: 1px solid #ced4da;
                margin-top: 2.5rem;
                padding-top: .25rem;
                font-weight: 600;
            }

        .report-footer .note {
            margin-top: 1rem;
            font-size: .875rem;
            color: #6c757d;
            text-align: center;
        }

    /* Apilar solo en pantallas chicas */
    @@media (max-width: 768px) {
        .report-footer .signs {
            flex-direction: column;
            gap: 1.25rem;
        }
    }

    /* Reglas de impresión/PDF (fallback robusto) */
    @@media print {
        .no-print {
            display: none !important;
        }

        a {
            color: #000;
            text-decoration: underline;
        }
        /* Forzar dos columnas incluso si flex falla al imprimir */
        .report-footer .signs {
            display: table; /* ← fallback */
            width: 100%;
            table-layout: fixed;
            break-inside: avoid;
            page-break-inside: avoid;
        }

        .report-footer .sign {
            display: table-cell; /* ← dos celdas = dos columnas */
            width: 50%;
            vertical-align: bottom;
            text-align: center;
        }

        .report-footer .note {
            color: #000;
        }
    }
</style>

@functions {
    const int EST_CUMPLE = 6;
    const int EST_PARCIAL = 10;
    const int EST_NOCUMPLE = 7;

    string EstadoTexto(int? id) => id switch
    {
        EST_CUMPLE => "Cumple",
        EST_PARCIAL => "Cumple Parcialmente",
        EST_NOCUMPLE => "No cumple",
        _ => "Pendiente"
    };
    string EstadoClase(int? id) => id switch
    {
        EST_CUMPLE => "pill pill-success",
        EST_PARCIAL => "pill pill-warning",
        EST_NOCUMPLE => "pill pill-danger",
        _ => "pill pill-secondary"
    };
    string SemClase(int? id) => id switch
    {
        EST_CUMPLE => "sem sem-ok",
        EST_PARCIAL => "sem sem-warn",
        EST_NOCUMPLE => "sem sem-bad",
        _ => "sem sem-pend"
    };
}

<div class="report-wrap">
    <div class="d-flex justify-content-between align-items-start my-3">
        <h1 class="h4 mb-3">Informe de auditoría de madurez CMMI a la legislación: @Model?.Legislacion?.titulo</h1>
        <a asp-action="Ciclos"
           asp-controller="Legislacion"
           asp-route-legislacionId="@Model?.Legislacion?.id_legislacion"
           class="btn btn-outline-secondary no-print">Volver</a>
    </div>

    <div class="text-muted mb-3">
        <div class="fw-semibold">
            Empresa @Model?.Empresa?.nombre @if (!string.IsNullOrEmpty(paisEmpresa)){
            <span> (@paisEmpresa)</span>
                        }
        </div>
        <div>
            Inicio auditoria: @Model?.CicloAuditoria?.fecha_inicio.ToString("dd/MM/yyyy HH:mm")
            · Cierre auditoria: @(Model?.CicloAuditoria?.fecha_cierre?.ToString("dd/MM/yyyy HH:mm") ?? "—")
        </div>
        <div>
            Auditor: @((Model?.Auditor?.nombre + " " + Model?.Auditor?.apellido)?.Trim())
            @if (!string.IsNullOrEmpty(paisAuditor))
            {
                <span> · @paisAuditor</span>
            }
        </div>
    </div>
    
    <div class="fs-5 justify lh-lg">
        En el período del <strong>@fi?.ToString("dd/MM/yyyy HH:mm")</strong> al
        <strong>@(fc?.ToString("dd/MM/yyyy HH:mm") ?? "—")</strong> se realizó la
        <strong>auditoría de cumplimiento</strong> de la legislación
        <strong>@tituloLey</strong> perteneciente a la empresa 
        <strong>@empresa (@paisEmpresa)</strong>, representada legalmente por
        <strong>@representante</strong> (ITIN <strong>@nif</strong>), respecto de los
        requisitos establecidos en dicho cuerpo normativo. El trabajo de auditoría fue
        ejecutado por <strong>@auditor</strong>@(string.IsNullOrWhiteSpace(paisAuditor) ? "" : $" ({paisAuditor})")
        e incluyó la revisión de políticas y procedimientos, la verificación de controles tecnológicos,
        el análisis de registros e incidentes relevantes y la evaluación de los mecanismos de coordinación
        con autoridades competentes, apoyándose en entrevistas, observación directa y muestreo de evidencias documentales.
    </div>
    <div class="fs-5 justify lh-lg mt-3">
        Como resultado, la legislación alcanzó un <strong>cumplimiento global de @pct.ToString("0.##")%</strong> y
        de acuerdo con la <strong>escala CMMI </strong>, obtuvo el
        <strong>Nivel @lvl — “@nomNivel”</strong> @TextoPorNivel(lvl)
    </div>
    <!-- KPIs -->
    <div class="row g-3 row-cols-1 row-cols-sm-2 mb-4">
        <div class="col">
            <div class="stat-card text-center p-3 border rounded-3 h-100">
                <div class="text-muted small">Cumplimiento global</div>
                <div class="display-6 fw-bold">@(Model?.CicloAuditoria?.porcentaje_aprobado ?? 0)%</div>                
            </div>
        </div>
        <!-- NUEVO: KPI Nivel CMMI -->
        <div class="col">
            <div class="stat-card text-center p-3 border rounded-3 h-100">
                <div class="text-muted small">Nivel CMMI</div>
                <div class="display-6 fw-bold">@lvl</div>                
                <div class="small text-muted">@nomNivel</div>
            </div>
        </div>
        <div class="col">
            <div class="stat-card text-center p-3 border rounded-3 h-100">
                <div class="display-6 fw-bold">@Model.Articulos.Count(a => a.id_estado == 6)</div>
                <div class="text-muted small">Cumple</div>
            </div>
        </div>
        <div class="col">
            <div class="stat-card text-center p-3 border rounded-3 h-100">
                <div class="display-6 fw-bold">@Model.Articulos.Count(a => a.id_estado == 10)</div>
                <div class="text-muted small">Cumple Parcialmente</div>
            </div>
        </div>
        <div class="col">
            <div class="stat-card text-center p-3 border rounded-3 h-100">
                <div class="display-6 fw-bold">@Model.Articulos.Count(a => a.id_estado == 7)</div>
                <div class="text-muted small">No cumple</div>
            </div>
        </div>
    </div>

    <!-- Resumen -->
    <h2 class="h5 my-3">Resumen de artículos</h2>
    <div class="table-responsive mb-4">
        <table class="table align-middle">
            <thead class="table-light">
                <tr><th style="width:60%">Artículo</th><th>Estado</th><th class="text-end">Ir al detalle</th></tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Articulos.Count; i++)
                {
                    var a = Model.Articulos[i];
                    <tr>
                        <td><div class="fw-semibold">@a.segmentoTitulo</div></td>
                        <td><span class="@EstadoClase(a.id_estado)">@EstadoTexto(a.id_estado)</span></td>
                        <td class="text-end"><a href="#art_@i" class="btn btn-outline-secondary btn-sm no-print">Ver</a></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Detalle -->
    <h2 class="h5 mb-3">Detalle por artículos</h2>
    @for (int i = 0; i < Model.Articulos.Count; i++)
    {
        var a = Model.Articulos[i];
        <div id="art_@i" class="card mb-4 shadow-sm">
            <div class="card-header bg-white d-flex justify-content-between align-items-center">
                <div class="d-flex align-items-center gap-2">
                    <span class="@SemClase(a.id_estado)"></span>
                    <strong>@a.segmentoTitulo</strong>
                </div>
                <span class="@EstadoClase(a.id_estado)">@EstadoTexto(a.id_estado)</span>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <div class="text-muted fw-semibold mb-1">Contenido</div>
                    <div class="rich-view border rounded p-3 bg-white">
                        @Html.Raw(a.contenido)
                    </div>
                </div>

                @if (!string.IsNullOrWhiteSpace(a.observaciones))
                {
                    <div class="mb-3">
                        <div class="text-muted fw-semibold mb-1">Observación del auditor</div>
                        <div>@a.observaciones</div>
                    </div>
                }

                <div>
                    <div class="text-muted fw-semibold mb-1">Evidencias</div>
                    @if (a.Evidencias == null || a.Evidencias.Count == 0)
                    {
                        <div class="text-muted small">Sin evidencias adjuntas.</div>
                    }
                    else
                    {
                        <ul class="list-unstyled mb-0">
                            @foreach (var e in a.Evidencias)
                            {
                                var nombre = !string.IsNullOrWhiteSpace(e.nombre_archivo)
                                ? e.nombre_archivo
                                : (System.IO.Path.GetFileName(e.contenido_url) ?? "evidencia");
                                <li class="mb-1">
                                    <a class="evi-link" href="@e.contenido_url" target="_blank" rel="noopener">@nombre</a>
                                    <span class="text-muted small">@((e.mime_type?.Split('/')?.LastOrDefault()) ?? "")</span>
                                </li>
                            }
                        </ul>
                    }
                </div>
            </div>
        </div>
    }
    <br />

    <div class="report-footer">
        <div class="signs">
            <div class="sign">
                <div class="line">Auditor</div>
                <div class="small">@Model.Auditor?.nombre @Model.Auditor?.apellido</div>
            </div>
            <br />
            <div class="sign">
                <div class="line">Representante de @Model.Empresa?.nombre</div>
                <div class="small">@Model.Empresa?.representante</div>
            </div>
        </div>
        <div class="note">
            Este informe será entregado al representante legal de la empresa.
            En caso de hallazgos, se sugiere plan de acción correctiva.
        </div>
    </div>
</div>
